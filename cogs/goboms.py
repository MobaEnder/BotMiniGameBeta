import discord
from discord import app_commands
from discord.ext import commands
from datetime import datetime, timedelta
import random
import asyncio
from data_manager import get_user, update_balance, add_exp

class BombDefuse(commands.Cog):
	def __init__(self, bot):
		self.bot = bot

	@app_commands.command(name="bombdefuse", description="üí£ G·ª° Bom May R·ªßi - ch·ªçn ƒë√∫ng d√¢y ƒë·ªÉ th·∫Øng l·ªõn!")
	@app_commands.describe(amount="S·ªë ti·ªÅn c∆∞·ª£c")
	async def bombdefuse(self, interaction: discord.Interaction, amount: int):
		await interaction.response.defer()
		user = interaction.user
		uid = str(user.id)

		# L·∫•y d·ªØ li·ªáu ng∆∞·ªùi d√πng t·ª´ MongoDB
		user_data = await get_user(uid)

		# Ki·ªÉm tra cooldown
		last_time_str = user_data.get("last_bomb", "1970-01-01T00:00:00")
		last_time = datetime.fromisoformat(last_time_str)
		now = datetime.utcnow()
		cooldown = timedelta(minutes=1)
		if now - last_time < cooldown:
			remaining = cooldown - (now - last_time)
			m, s = divmod(int(remaining.total_seconds()), 60)
			return await interaction.followup.send(f"‚è≥ H√£y ch·ªù {m} ph√∫t {s} gi√¢y n·ªØa ƒë·ªÉ ch∆°i ti·∫øp!", ephemeral=True)

		if amount <= 0:
			return await interaction.followup.send("‚ùå S·ªë ti·ªÅn c∆∞·ª£c ph·∫£i l·ªõn h∆°n 0!", ephemeral=True)

		if user_data["money"] < amount:
			return await interaction.followup.send("‚ùå B·∫°n kh√¥ng ƒë·ªß ti·ªÅn!", ephemeral=True)

		wires = ["üü•", "üü©", "üü¶", "üü®"]
		winning_wire = random.choice(wires)
		chosen = []

		view = discord.ui.View(timeout=120)

		class WireButton(discord.ui.Button):
			def __init__(self, wire):
				super().__init__(label=wire, style=discord.ButtonStyle.primary)
				self.wire = wire

			async def callback(self, interaction_button: discord.Interaction):
				if interaction_button.user.id != interaction.user.id:
					return await interaction_button.response.send_message("Kh√¥ng ph·∫£i l∆∞·ª£t c·ªßa b·∫°n!", ephemeral=True)
				if chosen:
					return
				chosen.append(self.wire)

				# X·ª≠ l√Ω k·∫øt qu·∫£
				result = ""
				if self.wire == winning_wire:
					await update_balance(uid, amount * 3)  # l·ªùi g·∫•p 4 - c∆∞·ª£c g·ªëc
					result = f"‚úÖ B·∫°n ƒë√£ g·ª° ƒë√∫ng d√¢y {self.wire} v√† th·∫Øng **x4** s·ªë ti·ªÅn! üí∏"
				else:
					await update_balance(uid, -amount)
					result = f"üí• Boom! D√¢y {self.wire} ƒë√£ n·ªï! B·∫°n m·∫•t tr·∫Øng r·ªìi! üòµ"

				# C·∫≠p nh·∫≠t th·ªùi gian ch∆°i bom
				user_data["last_bomb"] = datetime.utcnow().isoformat()
				await get_user(uid, update=user_data)

				# C·ªông EXP
				await add_exp(uid, 30)
				new_balance = user_data["money"] + (amount * 3 if self.wire == winning_wire else -amount)

				await interaction_button.response.edit_message(
					content=result + f"\n\nüí∞ S·ªë d∆∞: ü™ô {new_balance:,} xu\n‚ú® B·∫°n nh·∫≠n ƒë∆∞·ª£c **30 EXP**!",
					view=None
				)

				await asyncio.sleep(120)
				try:
					await interaction_button.message.delete()
				except:
					pass

		for w in wires:
			view.add_item(WireButton(w))

		embed = discord.Embed(
			title="üí£ G·ª° Bom May R·ªßi",
			description="Ch·ªçn ƒë√∫ng d√¢y ƒë·ªÉ g·ª° bom! M·ªôt d√¢y duy nh·∫•t l√† an to√†n! üí•",
			color=discord.Color.red()
		)
		embed.add_field(name="C∆∞·ª£c:", value=f"ü™ô {amount:,} xu", inline=False)
		msg = await interaction.followup.send(embed=embed, view=view)

		await asyncio.sleep(120)
		if not chosen:
			await msg.edit(content="‚è≥ H·∫øt th·ªùi gian ch·ªçn d√¢y! Tr√≤ ch∆°i k·∫øt th√∫c.", view=None)
			await asyncio.sleep(5)
			try:
				await msg.delete()
			except:
				pass

async def setup(bot):
	await bot.add_cog(BombDefuse(bot))
