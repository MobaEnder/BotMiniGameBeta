import discord
from discord import app_commands
from discord.ext import commands
from datetime import datetime, timedelta
import random
import json
import os
import asyncio

USER_FILE = "data/users.json"

def load_users():
	if not os.path.exists(USER_FILE):
		with open(USER_FILE, "w") as f:
			json.dump({}, f)
	with open(USER_FILE, "r") as f:
		return json.load(f)

def save_users(data):
	with open(USER_FILE, "w") as f:
		json.dump(data, f, indent=4)

def get_bomb_cooldown(user_id):
	data = load_users()
	user = data.get(str(user_id), {})
	last_time = user.get("last_bomb", "1970-01-01T00:00:00")
	last_time = datetime.fromisoformat(last_time)
	cooldown = timedelta(minutes=1)
	now = datetime.utcnow()
	if now - last_time >= cooldown:
		return None
	return cooldown - (now - last_time)

class BombDefuse(commands.Cog):
	def __init__(self, bot):
		self.bot = bot

	@app_commands.command(name="bombdefuse", description="üí£ G·ª° Bom May R·ªßi - ch·ªçn ƒë√∫ng d√¢y ƒë·ªÉ th·∫Øng l·ªõn!")
	@app_commands.describe(amount="S·ªë ti·ªÅn c∆∞·ª£c")
	async def bombdefuse(self, interaction: discord.Interaction, amount: int):
		await interaction.response.defer()
		user = interaction.user
		uid = str(user.id)
		data = load_users()

		if uid not in data:
			await interaction.followup.send("‚ùå B·∫°n ch∆∞a c√≥ t√†i kho·∫£n!", ephemeral=True)
			return

		cooldown = get_bomb_cooldown(uid)
		if cooldown:
			m, s = divmod(int(cooldown.total_seconds()), 60)
			await interaction.followup.send(f"‚è≥ H√£y ch·ªù {m} ph√∫t {s} gi√¢y n·ªØa ƒë·ªÉ th·ª≠ l·∫°i!", ephemeral=True)
			return

		if amount <= 0:
			await interaction.followup.send("‚ùå S·ªë ti·ªÅn c∆∞·ª£c ph·∫£i l·ªõn h∆°n 0!", ephemeral=True)
			return

		if data[uid]["money"] < amount:
			await interaction.followup.send("‚ùå B·∫°n kh√¥ng ƒë·ªß ti·ªÅn!", ephemeral=True)
			return

		wires = ["üü•", "üü©", "üü¶", "üü®"]
		winning_wire = random.choice(wires)

		view = discord.ui.View(timeout=120)
		chosen = []

		class WireButton(discord.ui.Button):
			def __init__(self, wire):
				super().__init__(label=wire, style=discord.ButtonStyle.primary)
				self.wire = wire

			async def callback(self, interaction_button: discord.Interaction):
				if interaction_button.user.id != interaction.user.id:
					await interaction_button.response.send_message("Kh√¥ng ph·∫£i l∆∞·ª£t c·ªßa b·∫°n!", ephemeral=True)
					return
				if chosen:
					return
				chosen.append(self.wire)

				if self.wire == winning_wire:
					data[uid]["money"] += amount * 4 - amount
					result = f"‚úÖ B·∫°n ƒë√£ g·ª° ƒë√∫ng d√¢y {self.wire} v√† th·∫Øng **x4** s·ªë ti·ªÅn! üí∏"
				else:
					data[uid]["money"] -= amount
					result = f"üí• Boom! D√¢y {self.wire} ƒë√£ n·ªï! B·∫°n m·∫•t tr·∫Øng r·ªìi! üòµ"

				data[uid]["last_bomb"] = datetime.utcnow().isoformat()
				save_users(data)
				await interaction_button.response.edit_message(content=result + f"\n\nüí∞ S·ªë d∆∞: ü™ô {data[uid]['money']:,} xu", view=None)
				await asyncio.sleep(120)
				try:
					await interaction_button.message.delete()
				except:
					pass

		for w in wires:
			view.add_item(WireButton(w))

		embed = discord.Embed(title="üí£ G·ª° Bom May R·ªßi",
						description="Ch·ªçn ƒë√∫ng d√¢y ƒë·ªÉ g·ª° bom! M·ªôt d√¢y an to√†n duy nh·∫•t! üí•",
						color=discord.Color.red())
		embed.add_field(name="C∆∞·ª£c:", value=f"ü™ô {amount:,} xu", inline=False)
		msg = await interaction.followup.send(embed=embed, view=view)

		# Sau 2 ph√∫t n·∫øu kh√¥ng ch·ªçn
		await asyncio.sleep(120)
		if not chosen:
			await msg.edit(content="‚è≥ H·∫øt th·ªùi gian ch·ªçn d√¢y! Tr√≤ ch∆°i k·∫øt th√∫c.", view=None)
			await asyncio.sleep(5)
			try:
				await msg.delete()
			except:
				pass

async def setup(bot):
	await bot.add_cog(BombDefuse(bot))
